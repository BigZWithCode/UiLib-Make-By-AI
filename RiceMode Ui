local UILib = {}

function UILib:CreateUI(title)
    -- Main UI frame
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.Name = "CustomUI"
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 500, 0, 300)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
    MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui

    -- Visibility toggle
    local UIVisible = true

    -- Toggle UI Function
    local function ToggleUI()
        UIVisible = not UIVisible
        MainFrame.Visible = UIVisible
    end

    -- Title
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, 0, 0, 40)
    TitleLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    TitleLabel.Text = title or "UI Library"
    TitleLabel.TextColor3 = Color3.new(1, 1, 1)
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.TextSize = 18
    TitleLabel.Parent = MainFrame

    -- Tabs
    local TabContainer = Instance.new("Frame")
    TabContainer.Size = UDim2.new(1, 0, 0, 40)
    TabContainer.Position = UDim2.new(0, 0, 0, 40)
    TabContainer.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    TabContainer.BorderSizePixel = 0
    TabContainer.Parent = MainFrame

    local TabHolder = {}
    local ContentFrames = {}
    local ActiveTab = nil

    local function ShowTab(tabName)
        for name, frame in pairs(ContentFrames) do
            frame.Visible = (name == tabName)
        end
        ActiveTab = tabName
    end

    local function CreateTabButton(tabName)
        local TabButton = Instance.new("TextButton")
        TabButton.Size = UDim2.new(0, 120, 1, 0)
        TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        TabButton.Text = tabName
        TabButton.TextColor3 = Color3.new(1, 1, 1)
        TabButton.Font = Enum.Font.SourceSans
        TabButton.TextSize = 16
        TabButton.Parent = TabContainer

        TabButton.MouseButton1Click:Connect(function()
            ShowTab(tabName)
        end)

        return TabButton
    end

    local function AddTab(tabName)
        if TabHolder[tabName] then return end

        local ContentFrame = Instance.new("Frame")
        ContentFrame.Size = UDim2.new(1, 0, 1, -80)
        ContentFrame.Position = UDim2.new(0, 0, 0, 80)
        ContentFrame.BackgroundTransparency = 1
        ContentFrame.Visible = false
        ContentFrame.Parent = MainFrame

        local UIListLayout = Instance.new("UIListLayout")
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 5)
        UIListLayout.Parent = ContentFrame

        TabHolder[tabName] = CreateTabButton(tabName)
        ContentFrames[tabName] = ContentFrame

        if not ActiveTab then
            ShowTab(tabName)
        end

        return ContentFrame
    end

    -- Return UI table with functionality
    return {
        Frame = MainFrame,
        Toggle = ToggleUI, -- Gắn hàm toggle vào đây
        AddTab = function(self, tabName)
            return AddTab(tabName)
        end,
        AddTextButton = function(self, tabName, buttonText, callback)
            local TabFrame = ContentFrames[tabName]
            if not TabFrame then return end

            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(1, -10, 0, 30)
            Button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            Button.TextColor3 = Color3.new(1, 1, 1)
            Button.Text = buttonText or "Button"
            Button.Font = Enum.Font.SourceSans
            Button.TextSize = 16
            Button.Parent = TabFrame
            Button.MouseButton1Click:Connect(callback)
        end,
    }
end

return UILib
